[{"C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\index.js":"1","C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\App.js":"2","C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\reportWebVitals.js":"3","C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\components\\Search.js":"4"},{"size":535,"mtime":1682790517488,"results":"5","hashOfConfig":"6"},{"size":161,"mtime":1682792123697,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1682790517718,"results":"8","hashOfConfig":"6"},{"size":2482,"mtime":1682863745578,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1yqzi8t",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\index.js",[],[],[],"C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\App.js",[],[],"C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\reportWebVitals.js",[],[],"C:\\Users\\SWATI\\Desktop\\chatgpt\\job\\src\\components\\Search.js",["24"],[],"import React, { useState,  useEffect } from 'react'\r\nimport {Configuration, OpenAIApi}  from 'openai';\r\nimport { Button, InputLabel, TextField } from '@mui/material';\r\nimport \"./Search.css\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Search = () => {\r\nconst[input, setInput]=useState(\"\");\r\nconst[response,setResponse]=useState(\"\")\r\nconst [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\nconst handleChange=async(e)=>{\r\n   setInput(e.target.value);\r\n}\r\n\r\nconst handleSubmit=async()=>{\r\n  const configuration = new Configuration({\r\n      apiKey:process.env.REACT_APP_OPENAI,\r\n    });\r\n    delete configuration.baseOptions.headers['User-Agent'];\r\n    const openai = new OpenAIApi(configuration);\r\n\r\n    setOpen(true);\r\n  const response = await openai.createChatCompletion({\r\n      model: \"gpt-3.5-turbo\",\r\n      messages: [{role: \"user\", content: input}],\r\n    })\r\n  setResponse(response.data.choices[0].message.content)\r\n  console.log(response)\r\n}\r\n\r\nconst handleKeyPress = (event) => {\r\n  if(event.key === 'Enter'){\r\n    handleSubmit()\r\n  }\r\n}\r\n\r\n  return (\r\n    <div className='main'>\r\n      <div className='text_input_container'>   \r\n      <InputLabel type=\"text\"><b> Ask Me Anything! </b></InputLabel> \r\n        <TextField type=\"text\" fullWidth className=\"text_input\" onChange={handleChange} onKeyPress={handleKeyPress} placeholder='Search'>Search</TextField>\r\n      </div>\r\n      <Button variant=\"outlined\" onClick={handleSubmit}>\r\n      Click for the Answer!\r\n      </Button>\r\n    <div className='answer'>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth='lg'\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\">\r\n        <DialogTitle>{\"Answer:\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {response ? response: \"Loading...\"}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search",{"ruleId":"25","severity":1,"message":"26","line":1,"column":28,"nodeType":"27","messageId":"28","endLine":1,"endColumn":37},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]