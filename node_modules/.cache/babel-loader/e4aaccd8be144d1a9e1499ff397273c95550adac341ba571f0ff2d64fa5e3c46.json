{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SWATI\\\\Desktop\\\\chatgpt\\\\job\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { Button, TextField } from '@mui/material';\nimport \"./Search.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const handleChange = async e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = async () => {\n    const configuration = new Configuration({\n      apiKey: \"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\"\n    });\n    delete configuration.baseOptions.headers['User-Agent'];\n    const openai = new OpenAIApi(configuration);\n    const response = await openai.createChatCompletion({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"user\",\n        content: input\n      }]\n    });\n    setResponse(response.data.choices[0].message.content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"text\",\n      className: \"text_input\",\n      onChange: handleChange,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"an\",\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"7DYvtPwtpvHsujOu18i5DPImSFg=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","Configuration","OpenAIApi","Button","TextField","jsxDEV","_jsxDEV","Search","_s","input","setInput","response","setResponse","handleChange","e","target","value","handleSubmit","configuration","apiKey","baseOptions","headers","openai","createChatCompletion","model","messages","role","content","data","choices","message","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SWATI/Desktop/chatgpt/job/src/components/Search.js"],"sourcesContent":["import React, { useState,  useEffect } from 'react'\r\nimport {Configuration, OpenAIApi}  from 'openai';\r\nimport { Button, TextField } from '@mui/material';\r\nimport \"./Search.css\";\r\n\r\nconst Search = () => {\r\nconst[input, setInput]=useState(\"\");\r\nconst[response,setResponse]=useState(\"\")\r\n\r\nconst handleChange=async(e)=>{\r\n   setInput(e.target.value);\r\n}\r\n\r\nconst handleSubmit=async()=>{\r\n    const configuration = new Configuration({\r\n        apiKey: \"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\",\r\n      });\r\n      delete configuration.baseOptions.headers['User-Agent'];\r\n      const openai = new OpenAIApi(configuration);\r\n\r\n    const response = await openai.createChatCompletion({\r\n        model: \"gpt-3.5-turbo\",\r\n        messages: [{role: \"user\", content: input}],\r\n      })\r\n    setResponse(response.data.choices[0].message.content)\r\n}\r\n\r\n  return (\r\n    <div className='main'>\r\n    <TextField type=\"text\" className=\"text_input\" onChange={handleChange}>Search</TextField>\r\n    <Button onClick={handleSubmit}>Submit</Button>\r\n    <div className='an'>{response}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AACnD,SAAQC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AAChD,SAASC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAK,CAACY,QAAQ,EAACC,WAAW,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,YAAY,GAAC,MAAMC,CAAC,IAAG;IAC1BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAC,MAAAA,CAAA,KAAS;IACxB,MAAMC,aAAa,GAAG,IAAIjB,aAAa,CAAC;MACpCkB,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAOD,aAAa,CAACE,WAAW,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,MAAMC,MAAM,GAAG,IAAIpB,SAAS,CAACgB,aAAa,CAAC;IAE7C,MAAMP,QAAQ,GAAG,MAAMW,MAAM,CAACC,oBAAoB,CAAC;MAC/CC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CAAC;QAACC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAElB;MAAK,CAAC;IAC3C,CAAC,CAAC;IACJG,WAAW,CAACD,QAAQ,CAACiB,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACH,OAAO,CAAC;EACzD,CAAC;EAEC,oBACErB,OAAA;IAAKyB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrB1B,OAAA,CAACF,SAAS;MAAC6B,IAAI,EAAC,MAAM;MAACF,SAAS,EAAC,YAAY;MAACG,QAAQ,EAAErB,YAAa;MAAAmB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACxFhC,OAAA,CAACH,MAAM;MAACoC,OAAO,EAAEtB,YAAa;MAAAe,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9ChC,OAAA;MAAKyB,SAAS,EAAC,IAAI;MAAAC,QAAA,EAAErB;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;AAAA9B,EAAA,CA7BKD,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA+BZ,eAAeA,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}